#%%
import pandas as pd
import matplotlib.pyplot as plt

# Load the World Bank GDP growth data
path = r"C:\Users\domin\.Python Course\API_NY.GDP.MKTP.KD.ZG_DS2_en_csv_v2_23243.csv"
df = pd.read_csv(path, skiprows=4)

# First 5 rows of the raw World Bank file
print("RAW (first 5 rows):")
print(df.head(5).to_string(index=False))

# Select countries
countries = ["Sweden", "Germany", "Finland", "Greece", "France"]
df_sel = df[df["Country Name"].isin(countries)]

# Drop unnecessary columns
df_sel = df_sel.drop(columns=["Country Code", "Indicator Name", "Indicator Code"], errors="ignore")

# Reshape into long format
df_long = df_sel.melt(id_vars=["Country Name"], var_name="Year", value_name="GDP_Growth")
df_long["Year"] = pd.to_numeric(df_long["Year"], errors="coerce")
df_long["GDP_Growth"] = pd.to_numeric(df_long["GDP_Growth"], errors="coerce")
df_long = df_long.dropna(subset=["GDP_Growth", "Year"])

# Filter for years >= 1990
df_long = df_long[df_long["Year"] >= 1990]

# Plotting style and colors
plt.style.use("seaborn-v0_8-whitegrid")
colors = {
    "Sweden": "#1f77b4",   # blue
    "Germany": "#ff7f0e",  # orange
    "Finland": "#2ca02c",  # green
    "Greece": "#9467bd",   # purple
    "France": "#d62728",   # red
}

# Create a separate plot for each country
for country in countries:
    data = df_long[df_long["Country Name"] == country]

    plt.figure(figsize=(10,6))
    plt.plot(
        data["Year"], data["GDP_Growth"],
        marker='o', markersize=6,
        linewidth=2.5,
        color=colors[country],
        alpha=0.9
    )

    # Add baseline and labels
    plt.axhline(0, color="gray", linestyle="--", linewidth=0.9, alpha=0.8)
    plt.title(f"{country} — Annual GDP Growth (%)",
              fontsize=16, pad=15, weight='bold')
    plt.xlabel("Year", fontsize=13)
    plt.ylabel("GDP Growth (%)", fontsize=13)

    # Grid, background, layout
    plt.grid(alpha=0.3)
    plt.gca().set_facecolor("#fafafa")
    plt.tight_layout()

    plt.show()

    print("GDP Growth (%), 1990–2024")
    print(df_sel.to_string(index=False))



# %%
#%%
import pandas as pd
import matplotlib.pyplot as plt

# Paths
gdp_path = r"C:\Users\domin\.Python Course\API_NY.GDP.MKTP.KD.ZG_DS2_en_csv_v2_23243.csv"
pop_tot_path = r"C:\Users\domin\.Python Course\API_SP.POP.TOTL_DS2_en_csv_v2_23043.csv"

countries = ["Sweden", "Germany", "Finland", "Greece", "France"]

# Load GDP growth (annual %)
gdp = pd.read_csv(gdp_path, skiprows=4)
gdp_sel = gdp[gdp["Country Name"].isin(countries)].drop(
    columns=["Country Code", "Indicator Name", "Indicator Code"], errors="ignore"
)
gdp_long = gdp_sel.melt(id_vars=["Country Name"], var_name="Year", value_name="GDP_Growth")
gdp_long["Year"] = pd.to_numeric(gdp_long["Year"], errors="coerce")
gdp_long["GDP_Growth"] = pd.to_numeric(gdp_long["GDP_Growth"], errors="coerce")
gdp_long = gdp_long.dropna(subset=["GDP_Growth", "Year"])
gdp_long = gdp_long[gdp_long["Year"] >= 1990]

# Load Total population, compute growth % 
pop = pd.read_csv(pop_tot_path, skiprows=4)
pop_sel = pop[pop["Country Name"].isin(countries)].drop(
    columns=["Country Code", "Indicator Name", "Indicator Code"], errors="ignore"
)
pop_long = pop_sel.melt(id_vars=["Country Name"], var_name="Year", value_name="Population")
pop_long["Year"] = pd.to_numeric(pop_long["Year"], errors="coerce")
pop_long["Population"] = pd.to_numeric(pop_long["Population"], errors="coerce")
pop_long = pop_long.dropna(subset=["Population", "Year"])
pop_long = pop_long[pop_long["Year"] >= 1990]
pop_long["Pop_Growth_%"] = pop_long.groupby("Country Name")["Population"].pct_change() * 100

# Merge GDP growth with Pop growth
merged = pd.merge(
    gdp_long,
    pop_long[["Country Name", "Year", "Pop_Growth_%"]],
    on=["Country Name", "Year"],
    how="inner"
).dropna(subset=["Pop_Growth_%"])

print("Preview of merged data:")
print(merged.head().to_string(index=False))

# colors & style
plt.style.use("seaborn-v0_8-whitegrid")
colors = {
    "Sweden": "#1f77b4",
    "Germany": "#ff7f0e",
    "Finland": "#2ca02c",
    "Greece": "#9467bd",
    "France": "#d62728",
}

# Scatter: GDP growth vs Population growth
plt.figure(figsize=(10,7))
for c in countries:
    d = merged[merged["Country Name"] == c]
    plt.scatter(d["Pop_Growth_%"], d["GDP_Growth"], s=30, alpha=0.85, label=c)

plt.axhline(0, color="gray", linestyle="--", linewidth=0.9, alpha=0.8)
plt.axvline(0, color="gray", linestyle="--", linewidth=0.9, alpha=0.8)
plt.xlabel("Population Growth (annual %)", fontsize=13)
plt.ylabel("GDP Growth (annual %)", fontsize=13)
plt.title("GDP Growth vs Population Growth (1990–latest)", fontsize=16, weight="bold", pad=12)
plt.legend(title="Country", fontsize=11, title_fontsize=12, ncol=2)
plt.tight_layout()
plt.show()

# Dual-axis per country (GDP vs Pop growth over time)
for c in countries:
    d = merged[merged["Country Name"] == c].sort_values("Year")

    fig, ax1 = plt.subplots(figsize=(10,6))
    ax2 = ax1.twinx()

    ax1.plot(d["Year"], d["GDP_Growth"], marker="o", linewidth=2.2, markersize=5,
             color=colors[c], alpha=0.9, label="GDP growth (%)")
    ax1.axhline(0, color="gray", linestyle="--", linewidth=0.9, alpha=0.8)

    ax2.plot(d["Year"], d["Pop_Growth_%"], marker="o", linewidth=2.0, markersize=4,
             color="#555555", alpha=0.8, label="Population growth (%)")

    ax1.set_title(f"{c} — GDP vs Population Growth (1990–latest)", fontsize=15, weight="bold", pad=10)
    ax1.set_xlabel("Year", fontsize=12)
    ax1.set_ylabel("GDP Growth (%)", fontsize=12, color=colors[c])
    ax2.set_ylabel("Population Growth (%)", fontsize=12, color="#555555")

    ax1.grid(alpha=0.3)
    fig.tight_layout()
    plt.show()

# %%
